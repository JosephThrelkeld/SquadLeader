@page "/map"
@using Blazor.Extensions
@using Blazor.Extensions.Canvas
@using SquadLeader.Map

<h3>Squad Leader Map</h3>



<svg viewBox="0 0 740 643" xmlns="http://www.w3.org/2000/svg">
@foreach (var location in Locations)
{
    <Hex X="@location.AbsLocation.Item1" Y="@location.AbsLocation.Item2" Radius="@radiusOfHexCircle" Address="@location.LocCoords" />
}
@foreach (var building in Buildings)
{
    <Structure Points="@building.Vertices" />
}
</svg>

@code
{
    private int radiusOfHexCircle = 20;
    public List<Location> Locations { get; set; }  = new List<Location>();
    public List<Building> Buildings { get; set; } = new List<Building>();

    protected override void OnInitialized()
    {
        var distFromCenterToEdge = (Math.Sqrt(3) * radiusOfHexCircle) / 2;
        for (var i = 0; i < 20; i++)
        {
            for (var j = 0; j < 20; j++)
            {
                Locations.Add(new(((char)((int)'A' + j), i), 
                    (radiusOfHexCircle * 1.5 * j + radiusOfHexCircle, 
                    (distFromCenterToEdge * 2 * i + (distFromCenterToEdge + (j % 2 > 0 ? distFromCenterToEdge: 0))))));
            }
        }

        var hexWidth = radiusOfHexCircle * 2;
        var hexHeight = distFromCenterToEdge * 2;
        var startX = hexWidth * 3 + (hexWidth * 0.25);
        var startY = hexHeight * 5 + (hexHeight * 0.25);
        Buildings.Add(new Building([(startX,startY),
        (startX + (hexWidth * 2),startY),
        (startX + (hexWidth * 2),startY + (hexHeight * 3) - (hexHeight * 0.50)),
        (startX,startY + (hexHeight * 3) - (hexHeight * 0.50)),
        (startX,startY)]));
    }
}
